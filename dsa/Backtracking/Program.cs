


using Backtracking;

// FloodFill.Solution([[1,1,1],[1,1,0],[1,0,1]], 1, 1, 2);
// FloodFill.Solution([[0,0,0],[0,0,0]], 1, 0, 2);

// SudokuSolver.Solution([['5','3','.','.','7','.','.','.','.'],['6','.','.','1','9','5','.','.','.'],['.','9','8','.','.','.','.','6','.'],['8','.','.','.','6','.','.','.','3'],['4','.','.','8','.','3','.','.','1'],['7','.','.','.','2','.','.','.','6'],['.','6','.','.','.','.','2','8','.'],['.','.','.','4','1','9','.','.','5'],['.','.','.','.','8','.','.','7','9']]);

// Permutation.Solution([1, 2, 3]);

PartitionEqualSubsetSum.Solution([1,5,11,5]);